{"version":3,"sources":["constants.js","utils.js","components/Link.js","components/LinkList.js","components/CreateLink.js","components/Header.js","components/Login.js","components/Search.js","components/App.js","index.js"],"names":["AUTH_TOKEN","timeDifferenceForDate","date","current","previous","milliSecondsPerMinute","milliSecondsPerHour","milliSecondsPerDay","milliSecondsPerMonth","milliSecondsPerYear","elapsed","Math","round","timeDifference","Date","getTime","VOTE_MUTATION","gql","Link","authToken","localStorage","getItem","className","this","props","index","mutation","variables","linkId","link","id","update","store","vote","data","updateStoreAfterVote","voteMutation","onClick","description","url","votes","length","postedBy","name","createdAt","Component","FEED_QUERY","NEW_LINKS_SUBSCRIPTION","NEW_VOTES_SUBSCRIPTION","LinkList","_updateCacheAfterVote","createVote","isNewPage","location","pathname","includes","page","parseInt","match","params","skip","first","orderBy","readQuery","query","feed","links","find","writeQuery","_subscribeToNewLinks","subscribeToMore","document","updateQuery","prev","subscriptionData","newLink","Object","assign","count","__typename","_subscribeToNewVotes","_getQueryVariables","_getLinksToRender","rankedLinks","slice","sort","l1","l2","_nextPage","nextPage","history","push","_previousPage","previousPage","loading","error","linksToRender","pageIndex","map","POST_MUTATION","CreateLink","state","value","onChange","e","setState","target","type","placeholder","onCompleted","post","unshift","postMutation","Header","to","removeItem","withRouter","SIGNUP_MUTATION","LOGIN_MUTATION","Login","login","email","password","_confirm","a","signup","token","_saveUserData","setItem","FEED_SEARCH_QUERY","Search","filter","_executeSearch","client","result","withApollo","App","exact","path","render","component","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","wsLink","WebSocketLink","options","reconnect","connectionParams","split","getMainDefinition","kind","operation","concat","ApolloClient","cache","InMemoryCache","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.dde943bf.chunk.js","sourcesContent":["export const AUTH_TOKEN = 'auth-token'\r\nexport const LINKS_PER_PAGE = 5","function timeDifference(current, previous) {\r\n  const milliSecondsPerMinute = 60 * 1000\r\n  const milliSecondsPerHour = milliSecondsPerMinute * 60\r\n  const milliSecondsPerDay = milliSecondsPerHour * 24\r\n  const milliSecondsPerMonth = milliSecondsPerDay * 30\r\n  const milliSecondsPerYear = milliSecondsPerDay * 365\r\n\r\n  const elapsed = current - previous\r\n\r\n  if (elapsed < milliSecondsPerMinute / 3) {\r\n    return 'just now'\r\n  }\r\n\r\n  if (elapsed < milliSecondsPerMinute) {\r\n    return 'less than 1 min ago'\r\n  } else if (elapsed < milliSecondsPerHour) {\r\n    return Math.round(elapsed / milliSecondsPerMinute) + ' min ago'\r\n  } else if (elapsed < milliSecondsPerDay) {\r\n    return Math.round(elapsed / milliSecondsPerHour) + ' h ago'\r\n  } else if (elapsed < milliSecondsPerMonth) {\r\n    return Math.round(elapsed / milliSecondsPerDay) + ' days ago'\r\n  } else if (elapsed < milliSecondsPerYear) {\r\n    return Math.round(elapsed / milliSecondsPerMonth) + ' mo ago'\r\n  } else {\r\n    return Math.round(elapsed / milliSecondsPerYear) + ' years ago'\r\n  }\r\n}\r\n\r\nexport function timeDifferenceForDate(date) {\r\n  const now = new Date().getTime()\r\n  const updated = new Date(date).getTime()\r\n  return timeDifference(now, updated)\r\n}","import React, { Component } from 'react'\r\nimport { AUTH_TOKEN } from '../constants'\r\nimport { timeDifferenceForDate } from '../utils'\r\nimport { Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nconst VOTE_MUTATION = gql`\r\n  mutation VoteMutation($linkId: ID!) {\r\n    vote(linkId: $linkId) {\r\n      id\r\n      link {\r\n       id\r\n        votes {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n        }\r\n      }\r\n      user {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nclass Link extends Component {\r\n\trender() {\r\n\t\tconst authToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\treturn (\r\n\t\t\t<div className=\"flex mt2 items-start\">\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<span className=\"gray\">{this.props.index + 1}.</span>\r\n\t\t\t\t\t{authToken && (\r\n\t\t\t\t\t\t<Mutation \r\n\t\t\t\t\t\t\tmutation={VOTE_MUTATION} \r\n\t\t\t\t\t\t\tvariables={{ linkId: this.props.link.id }}\r\n\t\t\t\t\t\t\tupdate={(store, { data: { vote } }) =>\r\n\t\t\t\t\t\t\t\tthis.props.updateStoreAfterVote(store, vote, this.props.link.id)\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t{voteMutation => (\r\n\t\t\t\t\t\t\t\t<div className=\"ml1 gray f11\" onClick={voteMutation}>\r\n\t\t\t\t\t\t\t\t▲\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Mutation>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ml1\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t{this.props.link.description} ({this.props.link.url})\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"f6 lh-copy gray\">\r\n\t\t\t\t\t{this.props.link.votes.length} votes | by{' '}\r\n\t\t\t\t\t{this.props.link.postedBy\r\n\t\t\t\t\t\t? this.props.link.postedBy.name\r\n\t\t\t\t\t\t: 'Unknown'}{' '}\r\n\t\t\t\t\t{timeDifferenceForDate(this.props.link.createdAt)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Link","import React, { Component,Fragment } from 'react'\r\nimport Link from './Link'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport { LINKS_PER_PAGE } from '../constants'\r\n\r\nexport const FEED_QUERY = gql`\r\n  query FeedQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {\r\n    feed(first: $first, skip: $skip, orderBy: $orderBy) {\r\n      links {\r\n        id\r\n        createdAt\r\n        url\r\n        description\r\n        postedBy {\r\n          id\r\n          name\r\n        }\r\n        votes {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n        }\r\n      }\r\n      count\r\n    }\r\n  }\r\n`\r\nconst NEW_LINKS_SUBSCRIPTION = gql`\r\n  subscription {\r\n    newLink {\r\n      id\r\n      url\r\n      description\r\n      createdAt\r\n      postedBy {\r\n        id\r\n        name\r\n      }\r\n      votes {\r\n        id\r\n        user {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst NEW_VOTES_SUBSCRIPTION = gql`\r\n  subscription {\r\n    newVote {\r\n      id\r\n      link {\r\n        id\r\n        url\r\n        description\r\n        createdAt\r\n        postedBy {\r\n          id\r\n          name\r\n        }\r\n        votes {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n        }\r\n      }\r\n      user {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\nclass LinkList extends Component {\r\n\t_updateCacheAfterVote = (store, createVote, linkId) => {\r\n\t\tconst isNewPage = this.props.location.pathname.includes('new')\r\n\t\tconst page = parseInt(this.props.match.params.page, 10)\r\n\r\n\t\tconst skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\r\n\t\tconst first = isNewPage ? LINKS_PER_PAGE : 100\r\n\t\tconst orderBy = isNewPage ? 'createdAt_DESC' : null\r\n\t\tconst data = store.readQuery({\r\n\t\t\tquery: FEED_QUERY,\r\n\t\t\tvariables: { first, skip, orderBy }\r\n\t\t})\r\n\r\n\t\tconst votedLink = data.feed.links.find(link => link.id === linkId)\r\n\t\tvotedLink.votes = createVote.link.votes\r\n\t\tstore.writeQuery({ query: FEED_QUERY, data })\r\n\t}\r\n\r\n\t_subscribeToNewLinks = subscribeToMore => {\r\n\t\tsubscribeToMore({\r\n\t\t\tdocument: NEW_LINKS_SUBSCRIPTION,\r\n\t\t\tupdateQuery: (prev, { subscriptionData }) => {\r\n\t\t\tif (!subscriptionData.data) return prev\r\n\t\t\tconst newLink = subscriptionData.data.newLink\r\n\t\t\tconst exists = prev.feed.links.find(({ id }) => id === newLink.id);\r\n\t\t\tif (exists) return prev;\r\n\r\n\t\t\treturn Object.assign({}, prev, {\r\n\t\t\t\tfeed: {\r\n\t\t\t\tlinks: [newLink, ...prev.feed.links],\r\n\t\t\t\tcount: prev.feed.links.length + 1,\r\n\t\t\t\t__typename: prev.feed.__typename\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t_subscribeToNewVotes = subscribeToMore => {\r\n\t\tsubscribeToMore({\r\n\t\t\tdocument: NEW_VOTES_SUBSCRIPTION\r\n\t\t})\r\n\t}\r\n\t_getQueryVariables = () => {\r\n\t\tconst isNewPage = this.props.location.pathname.includes('new')\r\n\t\tconst page = parseInt(this.props.match.params.page, 10)\r\n\r\n\t\tconst skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\r\n\t\tconst first = isNewPage ? LINKS_PER_PAGE : 100\r\n\t\tconst orderBy = isNewPage ? 'createdAt_DESC' : null\r\n\t\treturn { first, skip, orderBy }\r\n\t}\r\n\t_getLinksToRender = data => {\r\n\t\tconst isNewPage = this.props.location.pathname.includes('new')\r\n\t\tif (isNewPage) {\r\n\t\t\treturn data.feed.links\r\n\t\t}\r\n\t\tconst rankedLinks = data.feed.links.slice()\r\n\t\trankedLinks.sort((l1, l2) => l2.votes.length - l1.votes.length)\r\n\t\treturn rankedLinks\r\n\t}\r\n\t_nextPage = data => {\r\n\t\tconst page = parseInt(this.props.match.params.page, 10)\r\n\t\tif (page <= data.feed.count / LINKS_PER_PAGE) {\r\n\t\t\tconst nextPage = page + 1\r\n\t\t\tthis.props.history.push(`/new/${nextPage}`)\r\n\t\t}\r\n\t}\r\n\r\n\t_previousPage = () => {\r\n\t\tconst page = parseInt(this.props.match.params.page, 10)\r\n\t\tif (page > 1) {\r\n\t\t\tconst previousPage = page - 1\r\n\t\t\tthis.props.history.push(`/new/${previousPage}`)\r\n\t\t}\r\n\t}\r\n  render() {\r\n\treturn (\r\n\t  <Query query={FEED_QUERY} variables={this._getQueryVariables()}>\r\n\t\t{({ loading, error, data, subscribeToMore }) => {\r\n\t\t  if (loading) return <div>Fetching</div>\r\n\t\t  if (error) return <div>Error</div>\r\n\r\n\t\t  this._subscribeToNewLinks(subscribeToMore)\r\n\t\t  this._subscribeToNewVotes(subscribeToMore)\r\n\t\r\n\t\t  const linksToRender = this._getLinksToRender(data)\r\n\t\t\tconst isNewPage = this.props.location.pathname.includes('new')\r\n\t\t\tconst pageIndex = this.props.match.params.page\r\n\t\t\t? (this.props.match.params.page - 1) * LINKS_PER_PAGE\r\n\t\t\t: 0\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{linksToRender.map((link, index) => (\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tkey={link.id}\r\n\t\t\t\t\t\tlink={link}\r\n\t\t\t\t\t\tindex={index + pageIndex}\r\n\t\t\t\t\t\tupdateStoreAfterVote={this._updateCacheAfterVote}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{isNewPage && (\r\n\t\t\t\t\t<div className=\"flex ml4 mv3 gray\">\r\n\t\t\t\t\t\t<div className=\"pointer mr2\" onClick={this._previousPage}>\r\n\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"pointer\" onClick={() => this._nextPage(data)}>\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Fragment>\r\n\t\t\t)\r\n\t\t}}\r\n\t  </Query>\r\n\t)\r\n  }\r\n\t\r\n\r\n}\r\nexport default LinkList","import React, { Component } from 'react'\r\nimport { Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport { FEED_QUERY } from './LinkList'\r\nimport { LINKS_PER_PAGE } from '../constants'\r\n\r\nconst POST_MUTATION = gql`\r\n  mutation PostMutation($description: String!, $url: String!) {\r\n    post(description: $description, url: $url) {\r\n      id\r\n      createdAt\r\n      url\r\n      description\r\n    }\r\n  }\r\n`\r\n\r\nclass CreateLink extends Component {\r\n  state = {\r\n\tdescription: '',\r\n\turl: '',\r\n  }\r\n\r\n  render() {\r\n\tconst { description, url } = this.state\r\n\treturn (\r\n\t  <div>\r\n\t\t<div className=\"flex flex-column mt3\">\r\n\t\t  <input\r\n\t\t\tclassName=\"mb2\"\r\n\t\t\tvalue={description}\r\n\t\t\tonChange={e => this.setState({ description: e.target.value })}\r\n\t\t\ttype=\"text\"\r\n\t\t\tplaceholder=\"A description for the link\"\r\n\t\t  />\r\n\t\t  <input\r\n\t\t\tclassName=\"mb2\"\r\n\t\t\tvalue={url}\r\n\t\t\tonChange={e => this.setState({ url: e.target.value })}\r\n\t\t\ttype=\"text\"\r\n\t\t\tplaceholder=\"The URL for the link\"\r\n\t\t  />\r\n\t\t</div>\r\n\t\t<Mutation\r\n\t\t\tmutation={POST_MUTATION}\r\n\t\t\tvariables={{ description, url }}\r\n\t\t\tonCompleted={() => this.props.history.push('/new/1')}\r\n\t\t\tupdate={(store, { data: { post } }) => {\r\n\t\t\t\tconst first = LINKS_PER_PAGE\r\n\t\t\t\tconst skip = 0\r\n\t\t\t\tconst orderBy = 'createdAt_DESC'\r\n\t\t\t\tconst data = store.readQuery({\r\n\t\t\t\tquery: FEED_QUERY,\r\n\t\t\t\tvariables: { first, skip, orderBy }\r\n\t\t\t\t})\r\n\t\t\t\tdata.feed.links.unshift(post)\r\n\t\t\t\tstore.writeQuery({\r\n\t\t\t\tquery: FEED_QUERY,\r\n\t\t\t\tdata,\r\n\t\t\t\tvariables: { first, skip, orderBy }\r\n\t\t\t\t})\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{postMutation => <button onClick={postMutation}>Submit</button>}\r\n\t\t</Mutation>\r\n\t  </div>\r\n\t)\r\n  }\r\n}\r\n\r\nexport default CreateLink","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport { AUTH_TOKEN } from '../constants'\r\n\r\nclass Header extends Component {\r\n\trender() {\r\n\t\tconst authToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\treturn (\r\n\t\t\t<div className=\"flex pa1 justify-between nowrap orange\">\r\n\t\t\t<div className=\"flex flex-fixed black\">\r\n\t\t\t\t<div className=\"fw7 mr1\">Hacker News</div>\r\n\t\t\t\t<Link to=\"/\" className=\"ml1 no-underline black\">\r\n\t\t\t\tnew\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"ml1\">|</div>\r\n\t\t\t\t<Link to=\"/top\" className=\"ml1 no-underline black\">\r\n\t\t\t\t\ttop\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"ml1\">|</div>\r\n\t\t\t\t<Link to=\"/search\" className=\"ml1 no-underline black\">\r\n\t\t\t\t\tsearch\r\n\t\t\t\t</Link>\r\n\t\t\t\t{authToken && (\r\n\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t<div className=\"ml1\">|</div>\r\n\t\t\t\t\t<Link to=\"/create\" className=\"ml1 no-underline black\">\r\n\t\t\t\t\tsubmit\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"flex flex-fixed\">\r\n\t\t\t\t{authToken ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"ml1 pointer black\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\t\t\t\tthis.props.history.push(`/`)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tlogout\r\n\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t<Link to=\"/login\" className=\"ml1 no-underline black\">\r\n\t\t\t\t\tlogin\r\n\t\t\t\t</Link>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(Header)","import React, { Component } from 'react'\r\nimport { AUTH_TOKEN } from '../constants'\r\nimport { Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nconst SIGNUP_MUTATION = gql`\r\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\r\n    signup(email: $email, password: $password, name: $name) {\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation LoginMutation($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nclass Login extends Component {\r\n  state = {\r\n\tlogin: true, // switch between Login and SignUp\r\n\temail: '',\r\n\tpassword: '',\r\n\tname: '',\r\n  }\r\n\r\n  render() {\r\n\tconst { login, email, password, name } = this.state\r\n\treturn (\r\n\t  <div>\r\n\t\t<h4 className=\"mv3\">{login ? 'Login' : 'Sign Up'}</h4>\r\n\t\t<div className=\"flex flex-column\">\r\n\t\t  {!login && (\r\n\t\t\t<input\r\n\t\t\t  value={name}\r\n\t\t\t  onChange={e => this.setState({ name: e.target.value })}\r\n\t\t\t  type=\"text\"\r\n\t\t\t  placeholder=\"Your name\"\r\n\t\t\t/>\r\n\t\t  )}\r\n\t\t  <input\r\n\t\t\tvalue={email}\r\n\t\t\tonChange={e => this.setState({ email: e.target.value })}\r\n\t\t\ttype=\"text\"\r\n\t\t\tplaceholder=\"Your email address\"\r\n\t\t  />\r\n\t\t  <input\r\n\t\t\tvalue={password}\r\n\t\t\tonChange={e => this.setState({ password: e.target.value })}\r\n\t\t\ttype=\"password\"\r\n\t\t\tplaceholder=\"Choose a safe password\"\r\n\t\t  />\r\n\t\t</div>\r\n\t\t<div className=\"flex mt3\">\r\n\t\t\t<Mutation\r\n\t\t\t\tmutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\r\n\t\t\t\tvariables={{ email, password, name }}\r\n\t\t\t\tonCompleted={data => this._confirm(data)}\r\n\t\t\t>\r\n\t\t\t\t{mutation => (\r\n\t\t\t\t<div className=\"pointer mr2 button\" onClick={mutation}>\r\n\t\t\t\t\t{login ? 'login' : 'create account'}\r\n\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Mutation>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"pointer button\"\r\n\t\t\t\tonClick={() => this.setState({ login: !login })}\r\n\t\t\t>\r\n\t\t\t\t{login ? 'need to create an account?' : 'already have an account?'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t  </div>\r\n\t)\r\n  }\r\n\r\n\t_confirm = async data => {\r\n\t\tconst { token } = this.state.login ? data.login : data.signup\r\n\t\tthis._saveUserData(token)\r\n\t\tthis.props.history.push(`/`)\r\n\t}\r\n\r\n  _saveUserData = token => {\r\n\tlocalStorage.setItem(AUTH_TOKEN, token)\r\n  }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\nimport { withApollo } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport Link from './Link'\r\n\r\nconst FEED_SEARCH_QUERY = gql`\r\n  query FeedSearchQuery($filter: String!) {\r\n    feed(filter: $filter) {\r\n      links {\r\n        id\r\n        url\r\n        description\r\n        createdAt\r\n        postedBy {\r\n          id\r\n          name\r\n        }\r\n        votes {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nclass Search extends Component {\r\n\r\n  state = {\r\n    links: [],\r\n    filter: ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          Search\r\n          <input\r\n            type='text'\r\n            onChange={e => this.setState({ filter: e.target.value })}\r\n          />\r\n          <button onClick={() => this._executeSearch()}>OK</button>\r\n        </div>\r\n        {this.state.links.map((link, index) => (\r\n          <Link key={link.id} link={link} index={index} />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _executeSearch = async () => {\r\n    const { filter } = this.state\r\n    const result = await this.props.client.query({\r\n        query: FEED_SEARCH_QUERY,\r\n        variables: { filter },\r\n    })\r\n    const links = result.data.feed.links\r\n    this.setState({ links })\r\n  }\r\n}\r\n\r\nexport default withApollo(Search)","import React, { Component } from 'react'\r\nimport LinkList from './LinkList'\r\nimport CreateLink from './CreateLink'\r\nimport Header from './Header'\r\nimport Login from './Login'\r\nimport Search from './Search'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"center w85\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t<div className=\"ph3 pv1 background-gray\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/' render={() => <Redirect to='/new/1' />} />\r\n\t\t\t\t\t<Route exact path=\"/create\" component={CreateLink} />\r\n\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t\t\t\t<Route exact path='/search' component={Search} />\r\n\t\t\t\t\t<Route exact path='/top' component={LinkList} />\r\n          \t\t\t<Route exact path='/new/:page' component={LinkList} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/index.css'\r\nimport App from './components/App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { setContext } from 'apollo-link-context'\r\nimport { AUTH_TOKEN } from './constants'\r\nimport { split } from 'apollo-link'\r\nimport { WebSocketLink } from 'apollo-link-ws'\r\nimport { getMainDefinition } from 'apollo-utilities'\r\n// 1\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\n\r\n\r\n// 2\r\nconst httpLink = createHttpLink({\r\n\turi: 'http://localhost:4000'\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n\tconst token = localStorage.getItem(AUTH_TOKEN)\r\n\treturn {\r\n\t\theaders: {\r\n\t\t\t...headers,\r\n\t\t\tauthorization: token ? `Bearer ${token}` : ''\r\n\t\t}\r\n\t}\r\n})\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://localhost:4000`,\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: {\r\n      authToken: localStorage.getItem(AUTH_TOKEN),\r\n    }\r\n  }\r\n})\r\n\r\nconst link = split(\r\n  ({ query }) => {\r\n    const { kind, operation } = getMainDefinition(query)\r\n    return kind === 'OperationDefinition' && operation === 'subscription'\r\n  },\r\n  wsLink,\r\n  authLink.concat(httpLink)\r\n)\r\n\r\nconst client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache()\r\n})\r\n\r\n// 4\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<ApolloProvider client={client}>\r\n\t\t\t<App />\r\n\t\t</ApolloProvider>\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}